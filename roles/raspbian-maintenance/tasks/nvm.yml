---

# TODO: Check if nvm, node and npm already installed

- name: nvm | Install nvm
  shell: >
    curl -o- https://raw.githubusercontent.com/creationix/nvm/{{ nvm_versions.nvm }}/install.sh | sh
    creates=/home/{{ nvm_versions.nvm_user }}/.nvm/nvm.sh
  become: no

# creates=/home/{{ nvm_versions.nvm_user }}/.nvm/alias
- name: nvm | Install node and set version
  shell: >
    /bin/bash -c "source ~/.nvm/nvm.sh && nvm install {{ nvm_versions.nvm_node }} && nvm alias default {{ nvm_versions.nvm_node }}"
  become: no
  register: output
  changed_when: "'already installed.' not in output.stderr"

- name: nvm | Determine node install location
  shell: >
    /bin/bash -c "source ~/.nvm/nvm.sh && nvm which {{ nvm_versions.nvm_node }}"
  become: yes
  become_user: "{{ nvm_versions.nvm_user }}"
  register: nvm_which

- name: nvm | Print nvm which "{{ nvm_versions.nvm_node }}"
  debug: var=nvm_which.stdout

- name: nvm | Determine node install location
  shell: >
    /bin/bash -c "source ~/.nvm/nvm.sh && which npm"
  become: yes
  become_user: "{{ nvm_versions.nvm_user }}"
  register: npm_which

- name: nvm | Print npm which
  debug: var=npm_which.stdout

#   creates=/usr/local/bin/node
- name: nvm | Symlink node in /usr/local/bin
  file: src="{{ nvm_which.stdout_lines[0] }}" dest=/usr/local/bin/node state=link

#   creates=/usr/local/bin/npm
- name: nvm | Symlink npm in /usr/local/bin
  file: src="{{ npm_which.stdout_lines[0] }}" dest=/usr/local/bin/npm state=link

- name: nvm | Comment out nvm.sh sourcing in .bashrc
  lineinfile:
    dest: ~/.bashrc
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backrefs: yes
  with_items: "{{ raspberry_pi_user_bashrc_nvm_sourcing }}"
  become: no
